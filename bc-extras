#factorial
define f(n) { 
	if (n < 0) {
		print "oops";
		halt;
	}
	if (n < 2) return 1;
		return n*f(n-1);
}

#choose probability
define c(x, y) {
	return f(x)/(f(y)*f(x-y))
}

#binomeal factorial part
define be(a,b,c,d) {
	return c(a,b)*c(c,d)
}

#binomial distribution
define bdleast(n,p,q,x) {
    value = 0
    for(i=x;i<=n;++i) {
        value = value + ( c(n,i)*(p^i)*(q^(n-i)) )
    }
    return value;
}

define bdmost(n,p,q,x) {
    value = 0
    for(i=0;i<=x;++i) {
        value = value + ( c(n,i)*(p^i)*(q^(n-i)) )
    }
    return value;
}

# blasted economics
define fp(p, i, n) {
  return p*((1+i)^n);
}

define pf(f, i, n) {
  return f*(1/((1+i)^n));
}

define fa(a, i, n) {
  return a*((((1+i)^n) -1)/i);
}

define af(f, i, n) {
  return f*(i/(((1+i)^n) -1));
}

define ap(p, i, n) {
  return p*((i*((1+i)^n))/(((1+i)^n)-1));
}

define pa(a, i, n) {
  return a*((((1+i)^n) - 1)/(i*((1+i)^n)));
}

define cr(p, f, fi, i, n) {
  return ap((p-f),i, n) + fi;
}
